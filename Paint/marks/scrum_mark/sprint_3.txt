# Sprint 3 Nov 9, 2018
# Sprint 3 Backlog UserStories go below
--------------------------------------------------------------------------
TYPE : BUG 12 : herber30
NAME : Polyline is broken again
OWNER :
PRIORITY :
ESTIMATE :
ISSUE : Polyline must be a complete shape when the mode is changed.
--------------------------------------------------------------------------
-------------------------------------------------------------------------
TYPE : BUG 13 : sandh211
NAME : Shape counter (i) broken
OWNER : subset
PRIORITY : high
ESTIMATE : 2 hours
ISSUE : Shape counter (i) is not incrementing when new shapes are drawn.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE : BUG 7 : mehtaku6, durran33 (joint effort)
NAME : Architecture for drawing shapes can be improved
OWNER :
PRIORITY :
ESTIMATE :
ISSUE : The architecture can be improved if we implement the Command Design
Pattern to draw shapes as follows:

The PaintModel should use the command design pattern.
That is, each shape knows how to draw itself, so there is a single list of
DrawingCommands maintained by the PaintModel and used by the PaintPanel.
repaint() simply asks the PaintModel to ask command to execute(g).
The simplest way to make this happen is to make each shape implement the
DrawingCommand interface which requires execute(g) to be implemented.
Well sort of.

NOTE: The PaintModel does know how to logically draw itself, so does
know about strokes and pen colors etc. Depending on how much you want
to split off the logical from the GUI, it may not have to know how to
draw on the screen. This is a subtle difference. For example, the
following logically describes a scene, without actually knowing
how to draw it on the screen ...

Color = green
Fill = off
Border = on
BorderWidth = 10
Circle radius 10 at 12,15
Color = red
Fill = on
FillColor = black
Border = on
BorderWidth = 7
Square width 20 at 100,200

If you want to build a more 'logical' PaintModel, you can consider ...

1) Create a mirror hierarchy for Shape, this mirror hirerachy
has things like DrawableCircle which has a Circle. The DrawableCircle
knows how to draw the instance of Circle it holds. Each Shape will
still need information about its color, and stroke, one way or another.

OR

2) Lookup and apply the Visitor design pattern to the more logical
PaintModel.

--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE : BUG 8 : durran33
NAME : Architecture for handling shape modifiers can be improved
OWNER :
PRIORITY :
ESTIMATE :
ISSUE : The architecture can be improved if we implement the Command Design
Pattern to handle changes to the graphics context such as changing drawing
color, stroke width etc. You can accomplished this by wrapping the changes
to the graphics context in a DrawingCommand. This way these changes can be
added to the Bug 2.1 DrawingCommand list. That is, these new types of
DrawingCommands appear on PaintPanel's list right along side
the Shape type DrawingCommands.
--------------------------------------------------------------------------
-------------------------------------------------------------------------
TYPE : BUG 15 : herber30
NAME : Make canvas work for all window sizes
OWNER :
PRIORITY :
ESTIMATE :
ISSUE : Canvas only works for standard size
--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE : USER STORY 11 : durran33
NAME : Current Colour Display
OWNER : subset
PRIORITY :
ESTIMATE :
AS A : user
I WANT : a small canvas beside the ColourChooserPanel that displays
the current selected colour
SO THAT : I can see which colour I'm about to draw in.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
-------------------------------------------------------------------------
TYPE : BUG 14 : sandh211
NAME : Add additional features from MenuBar
OWNER : subset
PRIORITY : low
ESTIMATE : 2 hours
ISSUE : Implement stuff from menu bar.
-------------------------------------------------------------------------
TYPE : EXTRA (not required) User Story 12 : -durran33
NAME : Add an eraser
OWNER :
PRIORITY : high (Assignment due in 7 hours lol)
ESTIMATE : 2 hours
I WANT : an Eraser drawing option
SO THAT : I can erase what I've drawn in a more flexible manner than
undo.
--------------------------------------------------------------------------
